{"version":3,"sources":["midi.js","mininova.js","components/InputEnum.js","components/InputRange.js","components/Control.js","components/Oscillator.js","components/Controls.js","components/NotSupported.js","debug.js","components/DeviceSetup.js","components/Intro.jsx","App.tsx","serviceWorker.js","index.js"],"names":["SYSEX_START","MIDINOVA_SIGNATURE","cc","control","value","Uint8Array","nrpn","msb","lsb","isValidSysexValue","sysex","values","every","RangeError","concat","sequenceHandshake","sequencePreHandshake","sequencePatchResponse","loadPatch","_cc","R","waveforms","controls","label","enum","init","msg","range","InputEnum","id","emit","useState","setValue","className","htmlFor","onChange","event","Number","target","Array","from","keys","includes","map","key","InputRange","type","min","max","inRange","Control","props","hasOwnProperty","Oscillator","number","param","Controls","currentPatch","onClick","i","NotSupported","href","debugMidiMessage","message","prefix","bytes","d","join","console","log","consoleOutput","DeviceSetup","onChangeOutput","onIncomingMidiMessage","input","setInput","output","setOutput","midiSupport","setMidiSupport","availableInputs","setAvailableInputs","availableOutputs","setAvailableOutputs","visible","setVisible","detectUSB","a","navigator","usb","requestDevice","filters","vendorId","productId","device","productName","open","selectConfiguration","claimInterface","data","transferOut","listen","transferIn","result","buffer","useEffect","detectDevices","access","outputDevicesFound","outputs","next","done","push","inputDevicesFound","inputs","requestMIDIAccess","then","onstatechange","e","name","onmidimessage","selectInput","selectOutput","Intro","App","undefined","setCurrentPatch","send","setTimeout","selectPatch","length","isPatch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7d3cf1ff.chunk.js","sourcesContent":["const CC = 0xB0;\nconst NRPN_MSB = 0x63;\nconst NRPN_LSB = 0x62;\nconst NRPN_VAL = 0x06;\nconst SYSEX_START = 0xF0;\nconst SYSEX_END = 0xF7;\nconst MIDINOVA_SIGNATURE = [0x00, 0x20, 0x29, 0x03, 0x01];\nexport const PROGRAM_CHANGE = 0xC0;\n\nexport const cc = (control, value) => new Uint8Array([\n  CC, control, value,\n]);\n\nexport const nrpn = (msb, lsb, value) => new Uint8Array([\n  CC, NRPN_MSB, msb,\n  CC, NRPN_LSB, lsb,\n  CC, NRPN_VAL, value,\n]);\n\nconst isValidSysexValue = value => value >= 0x00 && value <= 0x7F;\n\nexport const sysex = values => {\n  if (!values.every(isValidSysexValue)) {\n    throw new RangeError(\"Sequence contains invalid sysex value\");\n  }\n\n  return new Uint8Array(\n    [SYSEX_START]\n      .concat(MIDINOVA_SIGNATURE)\n      .concat(values)\n      .concat([SYSEX_END])\n  );\n};\n","import * as R from 'ramda';\nimport { cc, nrpn, sysex } from './midi';\n\n// is it really handshake?\nconst sequenceHandshake = [0x7F, 0x60, 0x21, 0x00, 0x00, 0x00, 0x00];\nconst sequencePreHandshake = [0x7F, 0x62, 0x01, 0x00, 0x00, 0x00, 0x00];\nconst sequenceLoadCurrentPatch = [0x7F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00];\nconst sequencePatchResponse = [0xF0, 0x00, 0x20, 0x29, 0x03, 0x01, 0x7F, 0x00, 0x00, 0x09, 0x04];\n\nexport const isPatch = message =>\n  R.equals(R.take(sequencePatchResponse.length, Array.from(message)), sequencePatchResponse);\n\nexport const loadPatch = sysex(sequenceLoadCurrentPatch);\n\nexport const selectPatch = emit => {\n  emit(sysex(sequencePreHandshake));\n  setTimeout(() => emit(sysex(sequenceHandshake)), 1000);\n  setTimeout(() => emit(nrpn(63, 0, 1)), 2000);\n  setTimeout(() => emit(loadPatch), 3000);\n};\n\nconst _cc = R.curry(cc);\n\nconst waveforms = [\n  'Sine',\n  'Triangle',\n  'Sawtooth',\n  'Saw9:1PW',\n  'Saw8:2PW',\n  'Saw7:3PW',\n  'Saw6:4PW',\n  'Saw5:5PW',\n  'Saw4:6PW',\n  'Saw3:7PW',\n  'Saw2:8PW',\n  'Saw1:9PW',\n  'PW',\n  'Square',\n  'BassCamp',\n  'Bass_FM',\n  'EP_Dull',\n  'EP_Bell',\n  'Clav',\n  'DoubReed',\n  'Retro',\n  'StrnMch1',\n  'StrnMch2',\n  'Organ_1',\n  'Organ_2',\n  'EvilOrg',\n  'HiStuff',\n  'Bell_FM1',\n  'Bell_FM2',\n  'DigBell1',\n  'DigBell2',\n  'DigBell3',\n  'DigBell4',\n  'DigiPad',\n  'Wtable 1',\n  'Wtable 2',\n  'Wtable 3',\n  'Wtable 4',\n  'Wtable 5',\n  'Wtable 6',\n  'Wtable 7',\n  'Wtable 8',\n  'Wtable 9',\n  'Wtable10',\n  'Wtable11',\n  'Wtable12',\n  'Wtable13',\n  'Wtable14',\n  'Wtable15',\n  'Wtable16',\n  'Wtable17',\n  'Wtable18',\n  'Wtable19',\n  'Wtable20',\n  'Wtable21',\n  'Wtable22',\n  'Wtable23',\n  'Wtable24',\n  'Wtable25',\n  'Wtable26',\n  'Wtable27',\n  'Wtable28',\n  'Wtable29',\n  'Wtable30',\n  'Wtable31',\n  'Wtable32',\n  'Wtable33',\n  'Wtable34',\n  'Wtable35',\n  'Wtable36',\n  'AudInL/M',\n  // Two audio sources are included in the Waveform table;\n  // although the MiniNova only has a single audio input (AudInL/M),\n  // AudioInR is included for compatibility with UltraNova Patches\n  'AudioInR',\n];\n\nexport const controls = {\n  'osc-1-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(19),\n  },\n  'osc-1-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(20),\n  },\n  'osc-1-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(21),\n  },\n  'osc-1-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(22),\n  },\n  'osc-1-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(23),\n  },\n  'osc-1-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(24),\n  },\n  'osc-1-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(25),\n  },\n  'osc-1-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(26),\n  },\n  'osc-1-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(27),\n  },\n  'osc-1-pitch': {\n    range: [52, 76],\n    label: 'Pitch Wheel',\n    init: 76,\n    msg: _cc(28),\n  },\n  'osc-2-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(29),\n  },\n  'osc-2-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(30),\n  },\n  'osc-2-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(43),\n  },\n  'osc-2-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(33),\n  },\n  'osc-2-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(34),\n  },\n  'osc-2-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(35),\n  },\n  'osc-2-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(36),\n  },\n  'osc-2-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(37),\n  },\n  'osc-2-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(39),\n  },\n  'osc-2-pitch': {\n    label: 'Pitch Wheel',\n    range: [52, 76],\n    init: 76,\n    msg: _cc(40),\n  },\n  'osc-3-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(41),\n  },\n  'osc-3-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(42),\n  },\n  'osc-3-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(43),\n  },\n  'osc-3-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(44),\n  },\n  'osc-3-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(45),\n  },\n  'osc-3-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(46),\n  },\n  'osc-3-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(47),\n  },\n  'osc-3-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(48),\n  },\n  'osc-3-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(49),\n  },\n  'osc-3-pitch': {\n    label: 'Pitch Wheel',\n    range: [52, 76],\n    init: 76,\n    msg: _cc(50),\n  },\n};\n","import React, { useState } from 'react';\n\nfunction InputEnum({ id, control, emit }) {\n  const [value, setValue] = useState(control.init);\n\n  const onChange = event => {\n    const value = Number(event.target.value);\n\n    if (!Array.from(control.enum.keys()).includes(value)) {\n      return;\n    }\n\n    setValue(value);\n\n    emit(control.msg(value));\n  };\n\n  return (\n    <div className=\"control\">\n      <label htmlFor={control.id} className=\"control-label\">{control.label}</label>\n      <select onChange={onChange} value={value} className=\"control-input\">\n        {control.enum.map((label, value) => (\n          <option key={value} value={value}>{label}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default InputEnum;\n","import React, { useState } from 'react';\n\nconst inRange = (value, range) => (value >= range[0] && value <= range[1]);\n\nfunction InputRange({ id, control, emit }) {\n  const [value, setValue] = useState(control.init);\n\n  const onChange = event => {\n    const value = Number(event.target.value);\n\n    if (!inRange(value, control.range)) {\n      return;\n    }\n\n    setValue(value);\n\n    emit(control.msg(value));\n  };\n\n  return (\n    <div className=\"control\">\n      <label htmlFor={id} className=\"control-label\">{control.label}</label>\n      <input\n        id={id}\n        className=\"control-input\"\n        type=\"number\"\n        min={control.range[0]}\n        max={control.range[1]}\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default InputRange;\n","import React from 'react';\nimport InputEnum from './InputEnum';\nimport InputRange from './InputRange';\n\nfunction Control(props) {\n  const { control } = props;\n\n  if (control.hasOwnProperty('enum')) {\n    return <InputEnum {...props} />;\n  }\n\n  return <InputRange {...props} />;\n}\n\nexport default Control;\n","import React from 'react';\nimport Control from './Control';\nimport { controls } from '../mininova';\n\nfunction Oscillator({ emit, number }) {\n  const params = [\n    'wave',\n    'semitones',\n    'cents',\n    'vsync',\n    'pwwti',\n    'hardness',\n    'density',\n    'densitydetune',\n    'pitch',\n    'wtint',\n  ];\n\n  return (\n    <div className=\"oscillator\">\n      <h4>Oscillator {number}</h4>\n      {params.map(param => (\n        <Control\n          key={param}\n          id={param}\n          control={controls[`osc-${number}-${param}`]}\n          emit={emit}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Oscillator;\n","import React from 'react';\nimport { cc, nrpn } from '../midi';\nimport { loadPatch } from '../mininova';\nimport Oscillator from './Oscillator';\n\nfunction Controls({ currentPatch, emit }) {\n  const changeOctave = () => emit(cc(13, 0));\n  const activateArp = () => emit(nrpn(0, 122, 47));\n  const deactivateArp = () => emit(nrpn(0, 122, 46));\n  const selectPrevPatch = () => emit(nrpn(63, 0, 0));\n  const selectNextPatch = () => emit(nrpn(63, 0, 2));\n\n  return (\n    <div className=\"controls\">\n      <h3>Patch</h3>\n      <p>Current patch: {currentPatch}</p>\n      <button onClick={selectPrevPatch}>Prev patch</button>\n      <button onClick={selectNextPatch}>Next patch</button>\n      <button onClick={() => emit(loadPatch)}>Load patch</button>\n      <h3>Oct / Arp</h3>\n      <button onClick={changeOctave}>Change octave</button>\n      <button onClick={activateArp}>Arp ON</button>\n      <button onClick={deactivateArp}>Arp OFF</button>\n      <h3>Oscillators</h3>\n      <div className=\"oscillators\">\n        {[1, 2, 3].map(i => (\n          <Oscillator\n            key={i}\n            emit={emit}\n            number={i}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React from 'react';\n\nfunction NotSupported() {\n  return (\n    <div>\n      <p>It looks like your browser does not support MIDI.</p>\n      <p>MIDI access is an experimental technology. Check the list of compatible browsers in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess#Browser_compatibility\">Browser compatibility table </a>.</p>\n    </div>\n  );\n}\n\nexport default NotSupported;\n","export const debugMidiMessage = (message, prefix) => {\n  const bytes = message.map(d => d).join(' ');\n  console.log(`${prefix}${bytes}`);\n};\n\nexport const consoleOutput = new class {\n  send(message) {\n    debugMidiMessage(message, 'Output: ');\n  }\n}();\n","import React, { useState, useEffect } from 'react';\nimport * as R from 'ramda';\nimport NotSupported from './NotSupported.js';\nimport { cc } from '../midi';\nimport { debugMidiMessage } from '../debug';\n\nfunction DeviceSetup({\n  onChangeOutput,\n  onIncomingMidiMessage,\n  input,\n  setInput,\n  output,\n  setOutput\n}) {\n  const [midiSupport, setMidiSupport] = useState(null);\n  const [availableInputs, setAvailableInputs] = useState(null);\n  const [availableOutputs, setAvailableOutputs] = useState(null);\n  const [visible, setVisible] = useState(false);\n\n  const selectOutput = id => {\n    const device = R.find(R.propEq('id', id))(availableOutputs);\n    setOutput(device);\n    onChangeOutput();\n  };\n\n  const selectInput = id => {\n    if (input) {\n      input.onmidimessage = null;\n    }\n    const device = R.find(R.propEq('id', id))(availableInputs);\n    device.onmidimessage = onIncomingMidiMessage;\n    setInput(device);\n  };\n\n  const detectUSB = async () => {\n    console.log('Detecting USB devices');\n    const device = await navigator.usb.requestDevice({\n      filters: [\n        {\n          vendorId: 0x1235,\n          productId: 0x001e,\n        }\n      ],\n    });\n    console.log(`Connected to ${device.productName}`);\n    console.log(device);\n    await device.open();\n    await device.selectConfiguration(1);\n    await device.claimInterface(0);\n    const data = cc(13, 0);\n    const [endpointIn, endpointOut] = [1, 2];\n    console.log('Sending a message to USB device');\n    device.transferOut(endpointOut, data);\n\n    const listen = async () => {\n      console.log('Waiting for incoming messages from USB device...');\n      const result = await device.transferIn(endpointIn, 64);\n      debugMidiMessage(new Uint8Array(result.data.buffer), 'USB Input: ');\n      listen();\n    };\n\n    listen();\n  };\n\n  useEffect(() => {\n\n    const detectDevices = access => {\n      console.log('Detecting devices');\n\n      const outputDevicesFound = [];\n      const outputs = access.outputs.values();\n      for (let output = outputs.next(); output && !output.done; output = outputs.next()) {\n        outputDevicesFound.push(output.value);\n      }\n      setAvailableOutputs(outputDevicesFound);\n\n      const inputDevicesFound = [];\n      const inputs = access.inputs.values();\n      for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n        inputDevicesFound.push(input.value);\n      }\n      setAvailableInputs(inputDevicesFound);\n    };\n\n    if (!navigator.requestMIDIAccess) {\n      setMidiSupport(false);\n      return;\n    } else {\n      setMidiSupport(true);\n    }\n\n    navigator.requestMIDIAccess({ sysex: true }).then(access => {\n      access.onstatechange = e => {\n        detectDevices(access);\n      }\n      detectDevices(access);\n    });\n  }, []);\n\n  if (!visible) {\n    return (\n      <button onClick={() => setVisible(true)}>Choose device</button>\n    );\n  }\n\n  const renderMidiDevices = () => {\n    if (null === midiSupport) {\n      return <p>Detecting MIDI support...</p>;\n    } else if (!midiSupport) {\n      return <NotSupported />;\n    }\n\n    if (null === availableInputs || null === availableOutputs) {\n      return <div>Detecting MIDI devices...</div>;\n    }\n\n    return (\n      <div>\n        <p>Available devices:</p>\n        <ul>\n          {availableInputs.map(device => (\n            <li key={device.id}>\n              IN {device.name}\n              {input && device.id === input.id\n                ? ' (selected)'\n                : <button onClick={() => selectInput(device.id)}>select</button>\n              }\n            </li>\n          ))}\n          {availableOutputs.map(device => (\n            <li key={device.id}>\n              OUT {device.name}\n              {output && device.id === output.id\n                ? ' (selected)'\n                : <button onClick={() => selectOutput(device.id)}>select</button>\n              }\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"deviceSetup\">\n      <button onClick={detectUSB}>Connect to USB device</button>\n      {renderMidiDevices()}\n      <button onClick={() => setVisible(false)}>Close</button>\n    </div>\n  );\n}\n\nexport default DeviceSetup;\n","import React from 'react';\n\nfunction Intro() {\n    return (\n        <header>\n            <h1>Mininova web editor</h1>\n            <p>Control your Novation Mininova synth from your web browser</p>\n        </header>\n    );\n}\n\nexport default Intro;\n","import React, { useState } from 'react';\nimport { Controls, DeviceSetup, Intro } from './components';\nimport { PROGRAM_CHANGE } from './midi';\nimport { isPatch, selectPatch } from './mininova';\nimport { debugMidiMessage, consoleOutput } from './debug';\n\nfunction App() {\n  const [input, setInput] = useState(undefined);\n  const [output, setOutput] = useState(consoleOutput);\n  const [currentPatch, setCurrentPatch] = useState<number | undefined>(undefined);\n\n  const decodePatch = (data: Uint8Array) => {\n    console.log('Received patch.');\n  }\n\n  const onIncomingMidiMessage = (message: WebMidi.MIDIMessageEvent) => {\n    debugMidiMessage(message.data, 'Input: ');\n    if (message.data[0] === PROGRAM_CHANGE) {\n      setCurrentPatch(message.data[1]);\n    } else if (isPatch(message.data)) {\n      decodePatch(message.data);\n    }\n  };\n\n  const emit = (message: Uint8Array) => output && output.send(message);\n\n  const onChangeOutput = () => selectPatch(emit);\n\n  return (\n    <div>\n      <Intro />\n      <h3>Setup</h3>\n      <DeviceSetup\n        onChangeOutput={onChangeOutput}\n        onIncomingMidiMessage={onIncomingMidiMessage}\n        input={input}\n        setInput={setInput}\n        output={output}\n        setOutput={setOutput}\n      />\n      <Controls\n        currentPatch={currentPatch}\n        emit={emit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}