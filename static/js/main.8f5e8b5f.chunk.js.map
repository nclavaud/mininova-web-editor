{"version":3,"sources":["redux/patch.js","midi.ts","mininova.js","components/InputEnum.js","components/InputRange.js","components/Control.js","components/Oscillator.js","components/Controls.js","webmidi.ts","redux/midi.js","debug.ts","redux/device.js","components/MIDIDeviceSetup.tsx","adapters/usb.ts","components/USBDeviceSetup.tsx","components/DeviceSetup.js","components/Intro.jsx","mininova.nrpn.js","App.tsx","serviceWorker.js","redux/usb.js","redux/index.js","index.js"],"names":["SYSEX_START","cc","control","value","Uint8Array","nrpn","msb","lsb","isValidSysexValue","sequenceHandshake","sequencePreHandshake","sequencePatchResponse","MIDINOVA_SIGNATURE","mininovaSysex","values","every","RangeError","concat","sysex","loadPatch","_cc","R","waveforms","controls","label","enum","init","msg","range","patchControlChanged","id","type","payload","initialState","Object","entries","InputEnum","emit","dispatch","useDispatch","useSelector","state","patch","className","htmlFor","onChange","event","Number","target","Array","from","keys","includes","console","log","map","key","InputRange","min","max","inRange","Control","props","hasOwnProperty","Oscillator","number","param","Controls","currentPatch","onClick","i","findDeviceById","devices","filter","device","isSupported","navigator","requestMIDIAccess","detectionComplete","inputs","outputs","debugMidiMessage","message","prefix","bytes","d","join","noDevice","deviceInputOutputSelected","input","output","MIDIDeviceSetup","onChangeOutput","onIncomingMidiMessage","midi","availableInputs","availableOutputs","useEffect","registerAvailablePorts","access","outputDevicesFound","next","done","push","inputDevicesFound","listPorts","midiDevicesDetected","a","onstatechange","e","detectAvailablePorts","name","onmidimessage","data","deviceInputSelected","selectInput","deviceOutputSelected","selectOutput","href","isLastPartOfSysex","byteLength","USBDeviceIO","incomingMessageBuffer","this","listen","transferIn","result","buffer","length","appendToIncomingMessageBuffer","dispatchIncomingMessage","b","set","messages","m","ungroup","forEach","transferOut","detectUSB","usb","requestDevice","filters","vendorId","productId","open","selectConfiguration","claimInterface","productName","USBDeviceSetup","connectToUSBDevice","catch","DOMException","code","SECURITY_ERR","setIncomingMidiMessageListener","DeviceSetup","useState","visible","setVisible","Intro","isChangePatch","isChangeTempo","App","undefined","setCurrentPatch","send","setTimeout","selectPatch","isPatch","isNRPNEnd","isNRPNMiddle","isNRPNStart","patchDumpReceived","Boolean","window","location","hostname","match","reducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","error"],"mappings":"iMAyBA,I,kECpBMA,EAAc,IAIPC,EAAK,SAACC,EAAiBC,GAAlB,OAAgD,IAAIC,WAAW,CAT/D,IAUZF,EAASC,KAGFE,EAAO,SAACC,EAAaC,EAAaJ,GAA3B,OAAyD,IAAIC,WAAW,CAb1E,IACM,GAaRE,EAdE,IAEM,GAaRC,EAfE,IAGM,EAaRJ,KAGVK,EAAoB,SAACL,GAAD,OAAmBA,GAAS,GAAQA,GAAS,K,wBCfjEM,EAAoB,CAAC,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,GACzDC,EAAuB,CAAC,IAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAE5DC,EAAwB,CAAC,IAAM,EAAM,GAAM,GAAM,EAAM,EAAM,IAAM,EAAM,EAAM,EAAM,GAErFC,EAAqB,CAAC,EAAM,GAAM,GAAM,EAAM,GACvCC,EAAgB,SAAAC,GAAM,ODWd,SAACA,GACpB,IAAKA,EAAOC,MAAMP,GAChB,MAAM,IAAIQ,WAAW,yCAGvB,OAAO,IAAIZ,WACT,CAACJ,GACEiB,OAAOH,GACPG,OAAO,CAvBI,OCIqBC,CAAMN,EAAmBK,OAAOH,KAK1DK,EAAYN,EATQ,CAAC,IAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAkBhEO,EAAMC,IAAQpB,GAEdqB,EAAY,CAChB,OACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,KACA,SACA,WACA,UACA,UACA,UACA,OACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAIA,YAGWC,EAAW,CACtB,aAAc,CACZC,MAAO,OACPC,KAAMH,EACNI,KAAM,EACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,2BACPI,MAAO,CAAC,EAAG,KACXF,KAAM,IACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,iCACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,iBAAkB,CAChBI,MAAO,WACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,gBAAiB,CACfI,MAAO,UACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,sBAAuB,CACrBI,MAAO,iBACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,kBAAmB,CACjBI,MAAO,YACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbQ,MAAO,CAAC,GAAI,IACZJ,MAAO,cACPE,KAAM,GACNC,IAAKP,EAAI,KAEX,aAAc,CACZI,MAAO,OACPC,KAAMH,EACNI,KAAM,EACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,2BACPI,MAAO,CAAC,EAAG,KACXF,KAAM,IACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,iCACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,iBAAkB,CAChBI,MAAO,WACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,gBAAiB,CACfI,MAAO,UACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,sBAAuB,CACrBI,MAAO,iBACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,kBAAmB,CACjBI,MAAO,YACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,cACPI,MAAO,CAAC,GAAI,IACZF,KAAM,GACNC,IAAKP,EAAI,KAEX,aAAc,CACZI,MAAO,OACPC,KAAMH,EACNI,KAAM,EACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,2BACPI,MAAO,CAAC,EAAG,KACXF,KAAM,IACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,iCACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,iBAAkB,CAChBI,MAAO,WACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,gBAAiB,CACfI,MAAO,UACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,sBAAuB,CACrBI,MAAO,iBACPI,MAAO,CAAC,EAAG,KACXF,KAAM,EACNC,IAAKP,EAAI,KAEX,kBAAmB,CACjBI,MAAO,YACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,eACPI,MAAO,CAAC,EAAG,KACXF,KAAM,GACNC,IAAKP,EAAI,KAEX,cAAe,CACbI,MAAO,cACPI,MAAO,CAAC,GAAI,IACZF,KAAM,GACNC,IAAKP,EAAI,M,eFtRAS,EAAsB,SAACC,EAAI3B,GAAL,MACjC,CACE4B,KAL0B,wBAM1BC,QAAS,CACPF,KACA3B,WAcA8B,EAAe,GACrB,MAA0BC,OAAOC,QAAQZ,GAAzC,eAAoD,CAAC,IAAD,sBAA1CO,EAA0C,KAAtC5B,EAAsC,KAClD+B,EAAaH,GAAM5B,EAAQwB,KGMdU,MA5Bf,YAA2C,IAAtBN,EAAqB,EAArBA,GAAI5B,EAAiB,EAAjBA,QAASmC,EAAQ,EAARA,KAC1BC,EAAWC,cACXpC,EAAQqC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMZ,MAc/C,OACE,yBAAKa,UAAU,WACb,2BAAOC,QAAS1C,EAAQ4B,GAAIa,UAAU,iBAAiBzC,EAAQsB,OAC/D,4BAAQqB,SAfK,SAAAC,GACf,IAAM3C,EAAQ4C,OAAOD,EAAME,OAAO7C,OAE7B8C,MAAMC,KAAKhD,EAAQuB,KAAK0B,QAAQC,SAASjD,IAK9CmC,EAAST,EAAoBC,EAAI3B,IACjCkC,EAAKnC,EAAQyB,IAAIxB,KALfkD,QAAQC,IAAI,gBAAkBnD,IAWFA,MAAOA,EAAOwC,UAAU,iBACjDzC,EAAQuB,KAAK8B,KAAI,SAAC/B,EAAOrB,GAAR,OAChB,4BAAQqD,IAAKrD,EAAOA,MAAOA,GAAQqB,SCY9BiC,MA/Bf,YAA4C,IAAtB3B,EAAqB,EAArBA,GAAI5B,EAAiB,EAAjBA,QAASmC,EAAQ,EAARA,KAC3BC,EAAWC,cACXpC,EAAQqC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMZ,MAa/C,OACE,yBAAKa,UAAU,WACb,2BAAOC,QAASd,EAAIa,UAAU,iBAAiBzC,EAAQsB,OACvD,2BACEM,GAAIA,EACJa,UAAU,gBACVZ,KAAK,SACL2B,IAAKxD,EAAQ0B,MAAM,GACnB+B,IAAKzD,EAAQ0B,MAAM,GACnBiB,SApBW,SAAAC,GACf,IAAM3C,EAAQ4C,OAAOD,EAAME,OAAO7C,QAPtB,SAACA,EAAOyB,GAAR,OAAmBzB,GAASyB,EAAM,IAAMzB,GAASyB,EAAM,IAS9DgC,CAAQzD,EAAOD,EAAQ0B,SAI5BU,EAAST,EAAoBC,EAAI3B,IACjCkC,EAAKnC,EAAQyB,IAAIxB,MAabA,MAAOA,MCjBA0D,MAVf,SAAiBC,GAGf,OAFoBA,EAAZ5D,QAEI6D,eAAe,QAClB,kBAAC,EAAcD,GAGjB,kBAAC,EAAeA,ICsBVE,MA7Bf,YAAuC,IAAjB3B,EAAgB,EAAhBA,KAAM4B,EAAU,EAAVA,OAc1B,OACE,yBAAKtB,UAAU,cACb,0CAAgBsB,GAfL,CACb,OACA,YACA,QACA,QACA,QACA,WACA,UACA,gBACA,QACA,SAMUV,KAAI,SAAAW,GAAK,OACf,kBAAC,EAAD,CACEV,IAAKU,EACLpC,GAAE,cAASmC,EAAT,YAAmBC,GACrBhE,QAASqB,EAAS,OAAD,OAAQ0C,EAAR,YAAkBC,IACnC7B,KAAMA,SCWD8B,MAhCf,YAA2C,IAAvBC,EAAsB,EAAtBA,aAAc/B,EAAQ,EAARA,KAOhC,OACE,yBAAKM,UAAU,YACb,qCACA,6CAAmByB,GACnB,4BAAQC,QAPY,kBAAMhC,EAAKhC,EAAK,GAAI,EAAG,MAO3C,cACA,4BAAQgE,QAPY,kBAAMhC,EAAKhC,EAAK,GAAI,EAAG,MAO3C,cACA,4BAAQgE,QAAS,kBAAMhC,EAAKlB,KAA5B,cACA,yCACA,4BAAQkD,QAdS,kBAAMhC,EAAKpC,EAAG,GAAI,MAcnC,iBACA,4BAAQoE,QAdQ,kBAAMhC,EAAKhC,EAAK,EAAG,IAAK,OAcxC,UACA,4BAAQgE,QAdU,kBAAMhC,EAAKhC,EAAK,EAAG,IAAK,OAc1C,WACA,2CACA,yBAAKsC,UAAU,eACZ,CAAC,EAAG,EAAG,GAAGY,KAAI,SAAAe,GAAC,OACd,kBAAC,EAAD,CACEd,IAAKc,EACLjC,KAAMA,EACN4B,OAAQK,U,uBCXb,SAASC,EAA2CzC,EAAY0C,GACrE,OAAOA,EAAQC,QAAO,SAAAC,GAAM,OAAIA,EAAO5C,KAAOA,KAAI,IAAM,KCnB1D,IAYMG,EAAe,CACnB0C,cAAeC,UAAUC,kBACzBC,mBAAmB,EACnBC,OAAQ,GACRC,QAAS,I,gBCdEC,EAAmB,SAACC,EAAsBC,GACrD,IAAMC,EAAQF,EAAQ3B,KAAI,SAAA8B,GAAC,OAAIA,KAAGC,KAAK,KACvCjC,QAAQC,IAAR,UAAe6B,GAAf,OAAwBC,KAGbG,EAAW,iGACjBL,MADiB,8DAAG,ICiBdM,EAA4B,SAAAd,GAAM,MAC7C,CACE3C,KAtBiC,+BAuBjCC,QAAS,CACP0C,YAKAzC,EAAe,CACnBwD,MAAOF,EACPG,OAAQH,GCgFKI,MA5Ff,YAK0B,IAJxBC,EAIuB,EAJvBA,eACAC,EAGuB,EAHvBA,sBACAJ,EAEuB,EAFvBA,MACAC,EACuB,EADvBA,OAEMpD,EAAWC,cACXoC,EAAcnC,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,KAAKnB,eAC3DG,EAAoBtC,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,KAAKhB,qBACjEiB,EAAkBvD,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,KAAKf,UAC/DiB,EAAmBxD,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,KAAKd,WA0CtE,OArBAiB,qBAAU,WACR,GAAKtB,EAAL,CAIA,IAAMuB,EAAyB,SAACC,GAAgC,IAAD,EJzD1C,SAACA,GAGxB,IAFA,IAAMC,EAAqB,GACrBpB,EAAUmB,EAAOnB,QAAQlE,SACtB4E,EAASV,EAAQqB,OAAQX,IAAWA,EAAOY,KAAMZ,EAASV,EAAQqB,OACzED,EAAmBG,KAAKb,EAAOvF,OAKjC,IAFA,IAAMqG,EAAoB,GACpBzB,EAASoB,EAAOpB,OAAOjE,SACpB2E,EAAQV,EAAOsB,OAAQZ,IAAUA,EAAMa,KAAMb,EAAQV,EAAOsB,OACnEG,EAAkBD,KAAKd,EAAMtF,OAG/B,MAAO,CAACqG,EAAmBJ,GI6CGK,CAAUN,GADyB,mBACtDpB,EADsD,KAC9CC,EAD8C,KAE7D1C,EH3D6B,SAACyC,EAAQC,GAAT,MACjC,CACEjD,KAJ0B,wBAK1BC,QAAS,CACP+C,SACEC,YGsDO0B,CAAoB3B,EAAQC,MAGb,uCAAG,4BAAA2B,EAAA,sEJhEE/B,UAAUC,kBAAkB,CAAE3D,OAAO,IIgEvC,QACrBiF,EADqB,QAEpBS,cAAgB,SAAAC,GACrBX,EAAuBC,IAEzBD,EAAuBC,GALI,2CAAH,qDAQ1BW,MACC,CAACnC,EAAarC,IAEZqC,EASAG,EAKH,6BACE,iDACA,4BACGiB,EAAgBxC,KAAI,SAAAmB,GAAM,OACzB,wBAAIlB,IAAKkB,EAAO5C,IAAhB,MACM4C,EAAOqC,KACVtB,GAASf,EAAO5C,KAAO2D,EAAM3D,GAC1B,cACA,4BAAQuC,QAAS,kBAxDX,SAACvC,GACf2D,IACFA,EAAMuB,cAAgB,SAACH,MAEzB,IAAMnC,EAASH,EAAkCzC,EAAIiE,GACtC,OAAXrB,IACFA,EAAOsC,cAAgB,SAACH,GACtBhB,EAAsBgB,EAAEI,QAG5B3E,ED7C+B,SAAAoC,GAAM,MACvC,CACE3C,KAN0B,wBAO1BC,QAAS,CACP0C,WCyCOwC,CAAoBxC,IA8CMyC,CAAYzC,EAAO5C,MAA1C,cAIPkE,EAAiBzC,KAAI,SAAAmB,GAAM,OAC1B,wBAAIlB,IAAKkB,EAAO5C,IAAhB,OACO4C,EAAOqC,KACXrB,GAAUhB,EAAO5C,KAAO4D,EAAO5D,GAC5B,cACA,4BAAQuC,QAAS,kBAvEV,SAACvC,GACpB,IAAM4C,EAASH,EAAmCzC,EAAIkE,GACtD1D,EDtBgC,SAAAoC,GAAM,MACxC,CACE3C,KAd2B,yBAe3BC,QAAS,CACP0C,WCkBO0C,CAAqB1C,IAC9BkB,IAoEmCyB,CAAa3C,EAAO5C,MAA3C,gBArBL,0DARL,6BACE,gFACA,sHAA2F,uBAAGwF,KAAK,qFAAR,gCAA3F,OCpEFC,EAAoB,SAACrC,GAGzB,OAAoB,MAFHA,EAAQA,EAAQsC,WAAa,IAK1CC,E,WAMJ,WAAY/C,GAAoB,yBAJxBA,YAIuB,OAHvBmB,2BAGuB,OAFvB6B,2BAEuB,EAC7BC,KAAKjD,OAASA,EACdiD,KAAK9B,sBAAwB,SAACX,KAC9ByC,KAAKD,sBAAwB,IAAItH,WAAW,G,2EAGRyF,GACpC8B,KAAK9B,sBAAwBA,EAE7B8B,KAAKC,W,mKAIgBD,KAAKjD,OAAOmD,WA7BR,EAEE,I,QA4B3B,QADMC,E,cACN,IAAIA,GAAJ,UAAIA,EAAQb,YAAZ,aAAI,EAAcc,UA5BS,MA6BnB7C,EAAU,IAAI9E,WAAW0H,EAAOb,KAAKc,SAC/BC,QAAsCT,EAAkBrC,GAGzDyC,KAAKD,sBAAsBF,WAAa,GAEjDG,KAAKM,8BAA8B/C,GACnCyC,KAAKO,wBAAwBP,KAAKD,uBAClCC,KAAKD,sBAAwB,IAAItH,WAAW,IAG5CuH,KAAKO,wBAAwBhD,GAR7ByC,KAAKM,8BAA8B/C,IAYvCyC,KAAKC,S,0JAG+B1C,GACpC,IAAMiD,EAAI,IAAI/H,WAAWuH,KAAKD,sBAAsBF,WAAatC,EAAQsC,YACzEW,EAAEC,IAAIT,KAAKD,sBAAuB,GAClCS,EAAEC,IAAIlD,EAASyC,KAAKD,sBAAsBF,YAC1CG,KAAKD,sBAAwBS,I,8CAGCjD,IZ9BX,SAACA,GAItB,IAHA,IAAMmD,EAAW,GAEbC,EAAI,GACChE,EAAI,EAAGA,EAAIY,EAAQ8C,OAAQ1D,IAAK,CACvC,IAAM6D,EAAIjD,EAAQZ,GAEdgE,EAAEN,OAAS,GAAK,CAAC,IAAM,KAAM5E,SAAS+E,KACxCE,EAAS9B,KAAK,IAAInG,WAAWkI,IAC7BA,EAAI,IAGNA,EAAE/B,KAAK4B,GAOT,OAJIG,EAAEN,OAAS,GACbK,EAAS9B,KAAK,IAAInG,WAAWkI,IAGxBD,GYYYE,CAAQrD,GAChBsD,QAAQb,KAAK9B,yB,2BAGZX,GACVyC,KAAKjD,OAAO+D,YA7Dc,EA6DqBvD,O,KAItCwD,GAAS,uCAAG,4BAAA/B,EAAA,sEACF/B,UAAU+D,IAAIC,cAAc,CAC/CC,QAAS,CACP,CACEC,SA1EmB,KA2EnBC,UA1EoB,OAqEH,cACjBrE,EADiB,gBASjBA,EAAOsE,OATU,uBAUjBtE,EAAOuE,oBA9EgB,GAoEN,uBAWjBvE,EAAOwE,eA9EY,GAmEF,cAYvB7F,QAAQC,IAAR,uBAA4BoB,EAAOyE,cAZZ,kBAchB,IAAI1B,EAAY/C,IAdA,4CAAH,qDChBP0E,OA7Cf,YAGwB,EAFtB3D,MAEuB,IADvBI,EACsB,EADtBA,sBAQMvD,EAAWC,cAGjB,IAFoBC,aAAY,SAACC,GAAD,OAAsBA,EAAMkG,IAAIhE,eAG9D,OACE,6BACE,+EACA,kHAAuF,uBAAG2C,KAAK,8EAAR,gCAAvF,MAKN,IAAM+B,EAAkB,uCAAG,4BAAA1C,EAAA,sEACJ+B,KAAYY,OAAM,SAAAzC,GACrC,KAAIA,aAAa0C,cAAgB1C,EAAE2C,OAASD,aAAaE,cAIvD,MAAM5C,EAHNxD,QAAQC,IAAIuD,GACZxD,QAAQC,IAAI,0DAJS,UACnBoB,EADmB,wDAczBA,EAAOgF,+BAA+B7D,GACtCvD,EAASkD,EAA0Bd,IAfV,2CAAH,qDAkBxB,OACE,4BAAQL,QAASgF,GAAjB,0BC/BWM,OAlBf,SAAqB7F,GAAQ,IAAD,EACI8F,oBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,KAG1B,OAAKD,EAOH,yBAAKlH,UAAU,eACb,kBAAC,GAAmBmB,GACpB,kBAAC,EAAoBA,GACrB,4BAAQO,QAAS,kBAAMyF,GAAW,KAAlC,UARA,4BAAQzF,QAAS,kBAAMyF,GAAW,KAAlC,kBCESC,OATf,WACI,OACI,gCACI,mDACA,2FC+BNC,GAAgB,SAAA3J,GAAI,OAAgB,KAAZA,EAAK,IAAyB,IAAZA,EAAK,IAC/C4J,GAAgB,SAAA5J,GAAI,OAAgB,IAAZA,EAAK,IAAwB,KAAZA,EAAK,ICqCrC6J,OA1Df,WACE,IAAMzE,EAAQjD,aAAY,SAACC,GAAD,OAAsBA,EAAMiC,OAAOe,SACvDC,EAASlD,aAAY,SAACC,GAAD,OAAsBA,EAAMiC,OAAOgB,UAFjD,EAG2BkE,wBAA6BO,GAHxD,mBAGN/F,EAHM,KAGQgG,EAHR,KAIP9H,EAAWC,cAOblC,EAAiB,GAmBfgC,EAAO,SAAC6C,GACPQ,IAGLT,EAAiBC,EAAS,YAC1BQ,EAAO2E,KAAKnF,KAKd,OACE,6BACE,kBAAC,GAAD,MACA,qCACA,kBAAC,GAAD,CACEU,eAPiB,kBhBtCE,SAAAvD,GACzBA,EAAKxB,EAAcH,IACnB4J,YAAW,kBAAMjI,EAAKxB,EAAcJ,MAAqB,KACzD6J,YAAW,kBAAMjI,EAAKhC,EAAK,GAAI,EAAG,MAAK,KACvCiK,YAAW,kBAAMjI,EAAKlB,KAAY,KgBkCLoJ,CAAYlI,IAQnCwD,sBAjCwB,SAACX,GAPX,IAAC+B,EAQnBhC,EAAiBC,EAAS,WjBxBA,MiByBtBA,EAAQ,GACVkF,EAAgBlF,EAAQ,KhBrBP,SAAAA,GAAO,OAC5B7D,IAASA,IAAOV,EAAsBqH,OAAQ/E,MAAMC,KAAKgC,IAAWvE,GgBqBvD6J,CAAQtF,IDdE,SAACA,EAAS7E,GACjC,OhBrBgB,MgBqBZ6E,EAAQ,KAIQ,IAAhB7E,EAAK2H,QhBrBa,KgBqBG9C,EAAQ,IAIb,IAAhB7E,EAAK2H,QhB1Ba,IgB0BG9C,EAAQ,MACvB8E,GAAc3J,KAChB4J,GAAc5J,KCKToK,CAAUvF,EAAS7E,IDhCN,SAAC6E,EAAS7E,GACpC,OhBLgB,MgBKZ6E,EAAQ,KAIQ,IAAhB7E,EAAK2H,QhBPa,KgBOG9C,EAAQ,IAIb,IAAhB7E,EAAK2H,QhBVa,IgBUG9C,EAAQ,IC2BpBwF,CAAaxF,EAAS7E,GDtCV,SAAA6E,GAAO,OhBFhB,MgBEoBA,EAAQ,IhBDtB,KgBCmCA,EAAQ,GCwCpDyF,CAAYzF,KACrB7E,EAAO,CAAC6E,EAAQ,KAFhB7E,EAAKkG,KAAKrB,EAAQ,KAJlB7E,EAAKkG,KAAKrB,EAAQ,IAClB7B,QAAQC,IAAI,SAAWjD,GACvBA,EAAO,KAhBU4G,EAYL/B,EAXd7B,QAAQC,IAAI,mBACZhB,ElBV6B,SAAA2E,GAAI,MACnC,CACElF,KAdwB,sBAexBC,QAAS,CACPiF,SkBMO2D,CAAkB3D,MAuCvBxB,MAAOA,EACPC,OAAQA,IAEV,kBAAC,EAAD,CACEtB,aAAcA,EACd/B,KAAMA,MCzDMwI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,IAAMhJ,GAAe,CACnB0C,cAAeC,UAAU+D,KCKduC,GAAUC,YAAgB,CACrCzG,OV+BqB,WAAmC,IAAlCjC,EAAiC,uDAAzBR,EAAcmJ,EAAW,uCACvD,OAAQA,EAAOrJ,MACb,IAtC0B,wBAuCxB,OAAO,2BACFU,GADL,IAEEgD,MAAO2F,EAAOpJ,QAAQ0C,SAE1B,IA1C2B,yBA2CzB,OAAO,2BACFjC,GADL,IAEEiD,OAAQ0F,EAAOpJ,QAAQ0C,SAE3B,IA9CiC,+BA+C/B,OAAO,2BACFjC,GADL,IAEEgD,MAAO2F,EAAOpJ,QAAQ0C,OACtBgB,OAAQ0F,EAAOpJ,QAAQ0C,SAE3B,QACE,OAAOjC,IUjDXqD,KZWqB,WAAmC,IAAlCrD,EAAiC,uDAAzBR,EAAcmJ,EAAW,uCACvD,OAAQA,EAAOrJ,MACb,IArB0B,wBAsBxB,OAAO,2BACFU,GADL,IAEEqC,mBAAmB,EACnBC,OAAQqG,EAAOpJ,QAAQ+C,OACvBC,QAASoG,EAAOpJ,QAAQgD,UAE5B,QACE,OAAOvC,IYpBXC,MrBoBqB,WAAmC,IAAlCD,EAAiC,uDAAzBR,EAAcmJ,EAAW,uCACvD,OAAQA,EAAOrJ,MACb,IA5BwB,sBA6BtB,OAAO,2BACFU,GADL,IAEE,aAAc2I,EAAOpJ,QAAQiF,KAAK,IAClC,kBAAmBmE,EAAOpJ,QAAQiF,KAAK,IACvC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,iBAAkBmE,EAAOpJ,QAAQiF,KAAK,IACtC,gBAAiBmE,EAAOpJ,QAAQiF,KAAK,IACrC,sBAAuBmE,EAAOpJ,QAAQiF,KAAK,IAC3C,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,aAAcmE,EAAOpJ,QAAQiF,KAAK,IAClC,kBAAmBmE,EAAOpJ,QAAQiF,KAAK,IACvC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,iBAAkBmE,EAAOpJ,QAAQiF,KAAK,IACtC,gBAAiBmE,EAAOpJ,QAAQiF,KAAK,IACrC,sBAAuBmE,EAAOpJ,QAAQiF,KAAK,IAC3C,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,aAAcmE,EAAOpJ,QAAQiF,KAAK,IAClC,kBAAmBmE,EAAOpJ,QAAQiF,KAAK,IACvC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,iBAAkBmE,EAAOpJ,QAAQiF,KAAK,IACtC,gBAAiBmE,EAAOpJ,QAAQiF,KAAK,IACrC,sBAAuBmE,EAAOpJ,QAAQiF,KAAK,IAC3C,cAAemE,EAAOpJ,QAAQiF,KAAK,IACnC,cAAemE,EAAOpJ,QAAQiF,KAAK,MAEvC,IA/D0B,wBAgExB,OAAO,2BACFxE,GADL,kBAEG2I,EAAOpJ,QAAQF,GAAKsJ,EAAOpJ,QAAQ7B,QAExC,QACE,OAAOsC,IqB7DXkG,IDNqB,WAAmC,IAAlClG,EAAiC,uDAAzBR,GAAcmJ,EAAW,uCAGnD,OAFIA,EAAOrJ,KAEJU,KEEP4I,GAAQC,YACZJ,GACAJ,OAAOS,8BAAgCT,OAAOS,gCAGhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,QAGJM,SAASC,eAAe,SH+GpB,kBAAmBhH,WACrBA,UAAUiH,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEd3C,OAAM,SAAA4C,GACL7I,QAAQ6I,MAAMA,EAAMhH,c","file":"static/js/main.8f5e8b5f.chunk.js","sourcesContent":["import { controls } from '../mininova';\n\nconst PATCH_CONTROL_CHANGED = 'PATCH_CONTROL_CHANGED';\nconst PATCH_DUMP_RECEIVED = 'PATCH_DUMP_RECEIVED';\n\nexport const patchControlChanged = (id, value) => (\n  {\n    type: PATCH_CONTROL_CHANGED,\n    payload: {\n      id,\n      value,\n    },\n  }\n);\n\nexport const patchDumpReceived = data => (\n  {\n    type: PATCH_DUMP_RECEIVED,\n    payload: {\n      data,\n    },\n  }\n);\n\nconst initialState = [];\nfor (let [id, control] of Object.entries(controls)) {\n  initialState[id] = control.init;\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PATCH_DUMP_RECEIVED:\n      return {\n        ...state,\n        'osc-1-wave': action.payload.data[46],\n        'osc-1-semitones': action.payload.data[53],\n        'osc-1-cents': action.payload.data[54],\n        'osc-1-vsync': action.payload.data[49],\n        'osc-1-pwwti': action.payload.data[48],\n        'osc-1-hardness': action.payload.data[50],\n        'osc-1-density': action.payload.data[51],\n        'osc-1-densitydetune': action.payload.data[52],\n        'osc-1-pitch': action.payload.data[55],\n        'osc-1-wtint': action.payload.data[47],\n        'osc-2-wave': action.payload.data[56],\n        'osc-2-semitones': action.payload.data[63],\n        'osc-2-cents': action.payload.data[64],\n        'osc-2-vsync': action.payload.data[59],\n        'osc-2-pwwti': action.payload.data[58],\n        'osc-2-hardness': action.payload.data[60],\n        'osc-2-density': action.payload.data[61],\n        'osc-2-densitydetune': action.payload.data[62],\n        'osc-2-pitch': action.payload.data[65],\n        'osc-2-wtint': action.payload.data[57],\n        'osc-3-wave': action.payload.data[66],\n        'osc-3-semitones': action.payload.data[73],\n        'osc-3-cents': action.payload.data[74],\n        'osc-3-vsync': action.payload.data[69],\n        'osc-3-pwwti': action.payload.data[68],\n        'osc-3-hardness': action.payload.data[70],\n        'osc-3-density': action.payload.data[71],\n        'osc-3-densitydetune': action.payload.data[72],\n        'osc-3-pitch': action.payload.data[75],\n        'osc-3-wtint': action.payload.data[67],\n      };\n    case PATCH_CONTROL_CHANGED:\n      return {\n        ...state,\n        [action.payload.id]: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n","export const CC = 0xB0;\nexport const NRPN_MSB = 0x63;\nexport const NRPN_LSB = 0x62;\nexport const NRPN_VAL = 0x06;\nexport const NRPN_ADJ = 0x26;\nconst SYSEX_START = 0xF0;\nconst SYSEX_END = 0xF7;\nexport const PROGRAM_CHANGE = 0xC0;\n\nexport const cc = (control: number, value: number): Uint8Array => new Uint8Array([\n  CC, control, value,\n]);\n\nexport const nrpn = (msb: number, lsb: number, value: number): Uint8Array => new Uint8Array([\n  CC, NRPN_MSB, msb,\n  CC, NRPN_LSB, lsb,\n  CC, NRPN_VAL, value,\n]);\n\nconst isValidSysexValue = (value: number) => value >= 0x00 && value <= 0x7F;\n\nexport const sysex = (values: number[]): Uint8Array => {\n  if (!values.every(isValidSysexValue)) {\n    throw new RangeError(\"Sequence contains invalid sysex value\");\n  }\n\n  return new Uint8Array(\n    [SYSEX_START]\n      .concat(values)\n      .concat([SYSEX_END])\n  );\n};\n\nexport const ungroup = (message: Uint8Array): Uint8Array[] => {\n  const messages = [];\n\n  let m = [];\n  for (let i = 0; i < message.length; i++) {\n    const b = message[i];\n\n    if (m.length > 0 && [0xB0, 0xC0].includes(b)) {\n      messages.push(new Uint8Array(m));\n      m = [];\n    }\n\n    m.push(b);\n  }\n\n  if (m.length > 0) {\n    messages.push(new Uint8Array(m));\n  }\n\n  return messages;\n};\n","import * as R from 'ramda';\nimport { cc, nrpn, sysex } from './midi';\n\n// is it really handshake?\nconst sequenceHandshake = [0x7F, 0x60, 0x21, 0x00, 0x00, 0x00, 0x00];\nconst sequencePreHandshake = [0x7F, 0x62, 0x01, 0x00, 0x00, 0x00, 0x00];\nconst sequenceLoadCurrentPatch = [0x7F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00];\nconst sequencePatchResponse = [0xF0, 0x00, 0x20, 0x29, 0x03, 0x01, 0x7F, 0x00, 0x00, 0x09, 0x04];\n\nconst MIDINOVA_SIGNATURE = [0x00, 0x20, 0x29, 0x03, 0x01];\nexport const mininovaSysex = values => sysex(MIDINOVA_SIGNATURE.concat(values));\n\nexport const isPatch = message =>\n  R.equals(R.take(sequencePatchResponse.length, Array.from(message)), sequencePatchResponse);\n\nexport const loadPatch = mininovaSysex(sequenceLoadCurrentPatch);\n\nexport const selectPatch = emit => {\n  emit(mininovaSysex(sequencePreHandshake));\n  setTimeout(() => emit(mininovaSysex(sequenceHandshake)), 1000);\n  setTimeout(() => emit(nrpn(63, 0, 1)), 2000);\n  setTimeout(() => emit(loadPatch), 3000);\n};\n\nconst _cc = R.curry(cc);\n\nconst waveforms = [\n  'Sine',\n  'Triangle',\n  'Sawtooth',\n  'Saw9:1PW',\n  'Saw8:2PW',\n  'Saw7:3PW',\n  'Saw6:4PW',\n  'Saw5:5PW',\n  'Saw4:6PW',\n  'Saw3:7PW',\n  'Saw2:8PW',\n  'Saw1:9PW',\n  'PW',\n  'Square',\n  'BassCamp',\n  'Bass_FM',\n  'EP_Dull',\n  'EP_Bell',\n  'Clav',\n  'DoubReed',\n  'Retro',\n  'StrnMch1',\n  'StrnMch2',\n  'Organ_1',\n  'Organ_2',\n  'EvilOrg',\n  'HiStuff',\n  'Bell_FM1',\n  'Bell_FM2',\n  'DigBell1',\n  'DigBell2',\n  'DigBell3',\n  'DigBell4',\n  'DigiPad',\n  'Wtable 1',\n  'Wtable 2',\n  'Wtable 3',\n  'Wtable 4',\n  'Wtable 5',\n  'Wtable 6',\n  'Wtable 7',\n  'Wtable 8',\n  'Wtable 9',\n  'Wtable10',\n  'Wtable11',\n  'Wtable12',\n  'Wtable13',\n  'Wtable14',\n  'Wtable15',\n  'Wtable16',\n  'Wtable17',\n  'Wtable18',\n  'Wtable19',\n  'Wtable20',\n  'Wtable21',\n  'Wtable22',\n  'Wtable23',\n  'Wtable24',\n  'Wtable25',\n  'Wtable26',\n  'Wtable27',\n  'Wtable28',\n  'Wtable29',\n  'Wtable30',\n  'Wtable31',\n  'Wtable32',\n  'Wtable33',\n  'Wtable34',\n  'Wtable35',\n  'Wtable36',\n  'AudInL/M',\n  // Two audio sources are included in the Waveform table;\n  // although the MiniNova only has a single audio input (AudInL/M),\n  // AudioInR is included for compatibility with UltraNova Patches\n  'AudioInR',\n];\n\nexport const controls = {\n  'osc-1-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(19),\n  },\n  'osc-1-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(20),\n  },\n  'osc-1-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(21),\n  },\n  'osc-1-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(22),\n  },\n  'osc-1-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(23),\n  },\n  'osc-1-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(24),\n  },\n  'osc-1-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(25),\n  },\n  'osc-1-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(26),\n  },\n  'osc-1-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(27),\n  },\n  'osc-1-pitch': {\n    range: [52, 76],\n    label: 'Pitch Wheel',\n    init: 76,\n    msg: _cc(28),\n  },\n  'osc-2-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(29),\n  },\n  'osc-2-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(30),\n  },\n  'osc-2-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(43),\n  },\n  'osc-2-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(33),\n  },\n  'osc-2-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(34),\n  },\n  'osc-2-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(35),\n  },\n  'osc-2-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(36),\n  },\n  'osc-2-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(37),\n  },\n  'osc-2-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(39),\n  },\n  'osc-2-pitch': {\n    label: 'Pitch Wheel',\n    range: [52, 76],\n    init: 76,\n    msg: _cc(40),\n  },\n  'osc-3-wave': {\n    label: 'Wave',\n    enum: waveforms,\n    init: 2,\n    msg: _cc(41),\n  },\n  'osc-3-wtint': {\n    label: 'Wave Table Interpolation',\n    range: [0, 127],\n    init: 127,\n    msg: _cc(42),\n  },\n  'osc-3-pwwti': {\n    label: 'Pulse Width / Wave Table index',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(43),\n  },\n  'osc-3-vsync': {\n    label: 'Virtual Sync',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(44),\n  },\n  'osc-3-hardness': {\n    label: 'Hardness',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(45),\n  },\n  'osc-3-density': {\n    label: 'Density',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(46),\n  },\n  'osc-3-densitydetune': {\n    label: 'Density Detune',\n    range: [0, 127],\n    init: 0,\n    msg: _cc(47),\n  },\n  'osc-3-semitones': {\n    label: 'Semitones',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(48),\n  },\n  'osc-3-cents': {\n    label: 'Detune cents',\n    range: [0, 127],\n    init: 64,\n    msg: _cc(49),\n  },\n  'osc-3-pitch': {\n    label: 'Pitch Wheel',\n    range: [52, 76],\n    init: 76,\n    msg: _cc(50),\n  },\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { patchControlChanged } from '../redux/patch';\n\nfunction InputEnum({ id, control, emit }) {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.patch[id]);\n\n  const onChange = event => {\n    const value = Number(event.target.value);\n\n    if (!Array.from(control.enum.keys()).includes(value)) {\n      console.log('Wrong value: ' + value);\n      return;\n    }\n\n    dispatch(patchControlChanged(id, value));\n    emit(control.msg(value));\n  };\n\n  return (\n    <div className=\"control\">\n      <label htmlFor={control.id} className=\"control-label\">{control.label}</label>\n      <select onChange={onChange} value={value} className=\"control-input\">\n        {control.enum.map((label, value) => (\n          <option key={value} value={value}>{label}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default InputEnum;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { patchControlChanged } from '../redux/patch';\n\nconst inRange = (value, range) => (value >= range[0] && value <= range[1]);\n\nfunction InputRange({ id, control, emit }) {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.patch[id]);\n\n  const onChange = event => {\n    const value = Number(event.target.value);\n\n    if (!inRange(value, control.range)) {\n      return;\n    }\n\n    dispatch(patchControlChanged(id, value));\n    emit(control.msg(value));\n  };\n\n  return (\n    <div className=\"control\">\n      <label htmlFor={id} className=\"control-label\">{control.label}</label>\n      <input\n        id={id}\n        className=\"control-input\"\n        type=\"number\"\n        min={control.range[0]}\n        max={control.range[1]}\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default InputRange;\n","import React from 'react';\nimport InputEnum from './InputEnum';\nimport InputRange from './InputRange';\n\nfunction Control(props) {\n  const { control } = props;\n\n  if (control.hasOwnProperty('enum')) {\n    return <InputEnum {...props} />;\n  }\n\n  return <InputRange {...props} />;\n}\n\nexport default Control;\n","import React from 'react';\nimport Control from './Control';\nimport { controls } from '../mininova';\n\nfunction Oscillator({ emit, number }) {\n  const params = [\n    'wave',\n    'semitones',\n    'cents',\n    'vsync',\n    'pwwti',\n    'hardness',\n    'density',\n    'densitydetune',\n    'pitch',\n    'wtint',\n  ];\n\n  return (\n    <div className=\"oscillator\">\n      <h4>Oscillator {number}</h4>\n      {params.map(param => (\n        <Control\n          key={param}\n          id={`osc-${number}-${param}`}\n          control={controls[`osc-${number}-${param}`]}\n          emit={emit}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Oscillator;\n","import React from 'react';\nimport { cc, nrpn } from '../midi';\nimport { loadPatch } from '../mininova';\nimport Oscillator from './Oscillator';\n\nfunction Controls({ currentPatch, emit }) {\n  const changeOctave = () => emit(cc(13, 0));\n  const activateArp = () => emit(nrpn(0, 122, 47));\n  const deactivateArp = () => emit(nrpn(0, 122, 46));\n  const selectPrevPatch = () => emit(nrpn(63, 0, 0));\n  const selectNextPatch = () => emit(nrpn(63, 0, 2));\n\n  return (\n    <div className=\"controls\">\n      <h3>Patch</h3>\n      <p>Current patch: {currentPatch}</p>\n      <button onClick={selectPrevPatch}>Prev patch</button>\n      <button onClick={selectNextPatch}>Next patch</button>\n      <button onClick={() => emit(loadPatch)}>Load patch</button>\n      <h3>Oct / Arp</h3>\n      <button onClick={changeOctave}>Change octave</button>\n      <button onClick={activateArp}>Arp ON</button>\n      <button onClick={deactivateArp}>Arp OFF</button>\n      <h3>Oscillators</h3>\n      <div className=\"oscillators\">\n        {[1, 2, 3].map(i => (\n          <Oscillator\n            key={i}\n            emit={emit}\n            number={i}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","export const requestAccess = () => navigator.requestMIDIAccess({ sysex: true });\n\nexport const listPorts = (access: WebMidi.MIDIAccess) => {\n  const outputDevicesFound = [];\n  const outputs = access.outputs.values();\n  for (let output = outputs.next(); output && !output.done; output = outputs.next()) {\n    outputDevicesFound.push(output.value);\n  }\n\n  const inputDevicesFound = [];\n  const inputs = access.inputs.values();\n  for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n    inputDevicesFound.push(input.value);\n  }\n\n  return [inputDevicesFound, outputDevicesFound];\n};\n\nexport function findDeviceById<T extends WebMidi.MIDIPort>(id: string, devices: Array<T>): T | null {\n  return devices.filter(device => device.id === id)[0] || null;\n};\n","const MIDI_DEVICES_DETECTED = 'MIDI_DEVICES_DETECTED';\n\nexport const midiDevicesDetected = (inputs, outputs) => (\n  {\n    type: MIDI_DEVICES_DETECTED,\n    payload: {\n      inputs,\n        outputs,\n    },\n  }\n);\n\nconst initialState = {\n  isSupported: !!navigator.requestMIDIAccess,\n  detectionComplete: false,\n  inputs: [],\n  outputs: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MIDI_DEVICES_DETECTED:\n      return {\n        ...state,\n        detectionComplete: true,\n        inputs: action.payload.inputs,\n        outputs: action.payload.outputs,\n      };\n    default:\n      return state;\n  }\n};\n","import { DeviceIO, MidiMessage } from './ports';\n\nexport const debugMidiMessage = (message: MidiMessage, prefix: string) => {\n  const bytes = message.map(d => d).join(' ');\n  console.log(`${prefix}${bytes}`);\n};\n\nexport const noDevice = new class implements DeviceIO {\n  send(message: MidiMessage) {}\n  setIncomingMidiMessageListener() {}\n}();\n","import { noDevice } from '../debug';\n\nconst DEVICE_INPUT_SELECTED = 'DEVICE_INPUT_SELECTED';\nconst DEVICE_OUTPUT_SELECTED = 'DEVICE_OUTPUT_SELECTED';\nconst DEVICE_INPUT_OUTPUT_SELECTED = 'DEVICE_INPUT_OUTPUT_SELECTED';\n\nexport const deviceInputSelected = device => (\n  {\n    type: DEVICE_INPUT_SELECTED,\n    payload: {\n      device,\n    },\n  }\n)\n\nexport const deviceOutputSelected = device => (\n  {\n    type: DEVICE_OUTPUT_SELECTED,\n    payload: {\n      device,\n    },\n  }\n)\n\nexport const deviceInputOutputSelected = device => (\n  {\n    type: DEVICE_INPUT_OUTPUT_SELECTED,\n    payload: {\n      device,\n    },\n  }\n)\n\nconst initialState = {\n  input: noDevice,\n  output: noDevice,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DEVICE_INPUT_SELECTED:\n      return {\n        ...state,\n        input: action.payload.device,\n      };\n    case DEVICE_OUTPUT_SELECTED:\n      return {\n        ...state,\n        output: action.payload.device,\n      };\n    case DEVICE_INPUT_OUTPUT_SELECTED:\n      return {\n        ...state,\n        input: action.payload.device,\n        output: action.payload.device,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MidiMessage } from '../ports';\nimport { findDeviceById, listPorts, requestAccess } from '../webmidi';\nimport { midiDevicesDetected } from '../redux/midi';\nimport { deviceInputSelected, deviceOutputSelected } from '../redux/device';\n\ntype MIDIDeviceSetupProps = {\n  onChangeOutput: () => {},\n  onIncomingMidiMessage: (message: MidiMessage) => void,\n  input: WebMidi.MIDIInput,\n  output: WebMidi.MIDIOutput,\n};\n\ninterface RootState {\n  midi: {\n    isSupported: boolean,\n    detectionComplete: boolean,\n    inputs: WebMidi.MIDIInput[],\n    outputs: WebMidi.MIDIOutput[],\n  },\n};\n\nfunction MIDIDeviceSetup({\n  onChangeOutput,\n  onIncomingMidiMessage,\n  input,\n  output,\n}: MIDIDeviceSetupProps) {\n  const dispatch = useDispatch();\n  const isSupported = useSelector((state: RootState) => state.midi.isSupported);\n  const detectionComplete = useSelector((state: RootState) => state.midi.detectionComplete);\n  const availableInputs = useSelector((state: RootState) => state.midi.inputs);\n  const availableOutputs = useSelector((state: RootState) => state.midi.outputs);\n\n  const selectOutput = (id: string) => {\n    const device = findDeviceById<WebMidi.MIDIOutput>(id, availableOutputs);\n    dispatch(deviceOutputSelected(device));\n    onChangeOutput();\n  };\n\n  const selectInput = (id: string) => {\n    if (input) {\n      input.onmidimessage = (e: WebMidi.MIDIMessageEvent) => {};\n    }\n    const device = findDeviceById<WebMidi.MIDIInput>(id, availableInputs);\n    if (device !== null) {\n      device.onmidimessage = (e: WebMidi.MIDIMessageEvent) => {\n        onIncomingMidiMessage(e.data);\n      }\n    }\n    dispatch(deviceInputSelected(device));\n  };\n\n  useEffect(() => {\n    if (!isSupported) {\n      return;\n    }\n\n    const registerAvailablePorts = (access: WebMidi.MIDIAccess) => {\n      const [inputs, outputs] = listPorts(access);\n      dispatch(midiDevicesDetected(inputs, outputs));\n    };\n\n    const detectAvailablePorts = async () => {\n      const access = await requestAccess();\n      access.onstatechange = e => {\n        registerAvailablePorts(access);\n      }\n      registerAvailablePorts(access);\n    };\n\n    detectAvailablePorts();\n  }, [isSupported, dispatch]);\n\n  if (!isSupported) {\n    return (\n      <div>\n        <p>It looks like your browser does not support MIDI.</p>\n        <p>MIDI access is an experimental technology. Check the list of compatible browsers in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess#Browser_compatibility\">Browser compatibility table </a>.</p>\n      </div>\n    );\n  }\n\n  if (!detectionComplete) {\n    return <div>Detecting MIDI devices...</div>;\n  }\n\n  return (\n    <div>\n      <p>Available devices:</p>\n      <ul>\n        {availableInputs.map(device => (\n          <li key={device.id}>\n            IN {device.name}\n            {input && device.id === input.id\n              ? ' (selected)'\n              : <button onClick={() => selectInput(device.id)}>select</button>\n            }\n          </li>\n        ))}\n        {availableOutputs.map(device => (\n          <li key={device.id}>\n            OUT {device.name}\n            {output && device.id === output.id\n              ? ' (selected)'\n              : <button onClick={() => selectOutput(device.id)}>select</button>\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MIDIDeviceSetup;\n","import { DeviceIO, MidiMessage, MidiMessageFunc } from '../ports';\nimport { ungroup } from '../midi';\n\nconst MININOVA_VENDOR_ID = 0x1235;\nconst MININOVA_PRODUCT_ID = 0x001e;\nconst MININOVA_CONFIGURATION = 1;\nconst MININOVA_INTERFACE = 0;\nconst MININOVA_ENDPOINT_IN = 1;\nconst MININOVA_ENDPOINT_OUT = 2;\nconst MININOVA_BUFFER_LENGTH = 64;\n\nconst isLastPartOfSysex = (message: Uint8Array) => {\n  const lastByte = message[message.byteLength - 1];\n\n  return lastByte === 0xF7;\n};\n\nclass USBDeviceIO implements DeviceIO\n{\n  private device: USBDevice;\n  private onIncomingMidiMessage: MidiMessageFunc;\n  private incomingMessageBuffer: Uint8Array;\n\n  constructor(device: USBDevice) {\n    this.device = device;\n    this.onIncomingMidiMessage = (message: MidiMessage) => {};\n    this.incomingMessageBuffer = new Uint8Array(0);\n  }\n\n  public setIncomingMidiMessageListener(onIncomingMidiMessage: MidiMessageFunc): void {\n    this.onIncomingMidiMessage = onIncomingMidiMessage;\n\n    this.listen();\n  }\n\n  private async listen(): Promise<void> {\n    const result = await this.device.transferIn(MININOVA_ENDPOINT_IN, MININOVA_BUFFER_LENGTH);\n    if (result?.data?.buffer) {\n      const message = new Uint8Array(result.data.buffer);\n      if (message.length === MININOVA_BUFFER_LENGTH && !isLastPartOfSysex(message)) {\n        // incomplete message => store in buffer\n        this.appendToIncomingMessageBuffer(message);\n      } else if (this.incomingMessageBuffer.byteLength > 0) {\n        // end part of a message that has been stored in the buffer\n        this.appendToIncomingMessageBuffer(message);\n        this.dispatchIncomingMessage(this.incomingMessageBuffer);\n        this.incomingMessageBuffer = new Uint8Array(0);\n      } else {\n        // complete message, no buffer involved\n        this.dispatchIncomingMessage(message);\n      }\n    }\n\n    this.listen();\n  };\n\n  private appendToIncomingMessageBuffer(message: Uint8Array): void {\n    const b = new Uint8Array(this.incomingMessageBuffer.byteLength + message.byteLength);\n    b.set(this.incomingMessageBuffer, 0);\n    b.set(message, this.incomingMessageBuffer.byteLength);\n    this.incomingMessageBuffer = b;\n  }\n\n  private dispatchIncomingMessage(message: MidiMessage): void {\n    const messages = ungroup(message);\n    messages.forEach(this.onIncomingMidiMessage);\n  }\n\n  public send(message: Uint8Array): void {\n    this.device.transferOut(MININOVA_ENDPOINT_OUT, message);\n  }\n}\n\nexport const detectUSB = async () => {\n  const device = await navigator.usb.requestDevice({\n    filters: [\n      {\n        vendorId: MININOVA_VENDOR_ID,\n        productId: MININOVA_PRODUCT_ID,\n      }\n    ],\n  });\n  await device.open();\n  await device.selectConfiguration(MININOVA_CONFIGURATION);\n  await device.claimInterface(MININOVA_INTERFACE);\n  console.log(`Connected to ${device.productName}`);\n\n  return new USBDeviceIO(device);\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detectUSB } from '../adapters/usb';\nimport { DeviceInput, DeviceOutput, MidiMessage } from '../ports';\nimport { deviceInputOutputSelected } from '../redux/device';\n\ntype USBDeviceSetupProps = {\n  onIncomingMidiMessage: (message: MidiMessage) => void,\n  input: DeviceInput,\n  output: DeviceOutput,\n};\n\nfunction USBDeviceSetup({\n  input,\n  onIncomingMidiMessage,\n}: USBDeviceSetupProps) {\n  interface RootState {\n    usb: {\n      isSupported: boolean,\n    },\n  };\n\n  const dispatch = useDispatch();\n  const isSupported = useSelector((state: RootState) => state.usb.isSupported);\n\n  if (!isSupported) {\n    return (\n      <div>\n        <p>It looks like your browser does not support USB.</p>\n        <p>Web USB is an experimental technology. Check the list of compatible browsers in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/USB#Browser_compatibility\">Browser compatibility table </a>.</p>\n      </div>\n    )\n  }\n\n  const connectToUSBDevice = async () => {\n    const device = await detectUSB().catch(e => {\n      if (e instanceof DOMException && e.code === DOMException.SECURITY_ERR) {\n        console.log(e);\n        console.log(\"Is the device registered in the list of udev rules?\");\n      } else {\n        throw e;\n      }\n    });\n\n    if (!device) {\n      return;\n    }\n\n    device.setIncomingMidiMessageListener(onIncomingMidiMessage);\n    dispatch(deviceInputOutputSelected(device));\n  };\n\n  return (\n    <button onClick={connectToUSBDevice}>Connect to USB device</button>\n  );\n}\n\nexport default USBDeviceSetup;\n","import React, { useState } from 'react';\nimport MIDIDeviceSetup from './MIDIDeviceSetup';\nimport USBDeviceSetup from './USBDeviceSetup';\n\nfunction DeviceSetup(props) {\n  const [visible, setVisible] = useState(false);\n\n  if (!visible) {\n    return (\n      <button onClick={() => setVisible(true)}>Choose device</button>\n    );\n  }\n\n  return (\n    <div className=\"deviceSetup\">\n      <USBDeviceSetup {...props} />\n      <MIDIDeviceSetup {...props} />\n      <button onClick={() => setVisible(false)}>Close</button>\n    </div>\n  );\n}\n\nexport default DeviceSetup;\n","import React from 'react';\n\nfunction Intro() {\n    return (\n        <header>\n            <h1>Mininova web editor</h1>\n            <p>Control your Novation Mininova synth from your web browser</p>\n        </header>\n    );\n}\n\nexport default Intro;\n","import { CC, NRPN_MSB, NRPN_LSB, NRPN_VAL, NRPN_ADJ } from './midi';\n\nexport const isNRPNStart = message => message[0] === CC && message[1] === NRPN_MSB;\n\nexport const isNRPNMiddle = (message, nrpn) => {\n  if (message[0] !== CC) {\n    return false;\n  }\n\n  if (nrpn.length === 1 && message[1] === NRPN_LSB) {\n    return true;\n  }\n\n  if (nrpn.length === 2 && message[1] === NRPN_VAL) {\n    return true;\n  }\n\n  return false;\n}\n\nexport const isNRPNEnd = (message, nrpn) => {\n  if (message[0] !== CC) {\n    return false;\n  }\n\n  if (nrpn.length === 3 && message[1] === NRPN_ADJ) {\n    return true;\n  }\n\n  if (nrpn.length === 2 && message[1] === NRPN_VAL) {\n    return !isChangePatch(nrpn)\n      && !isChangeTempo(nrpn);\n  }\n\n  return false;\n}\n\nconst isChangePatch = nrpn => nrpn[0] === 63 && nrpn[1] === 1;\nconst isChangeTempo = nrpn => nrpn[0] === 2 && nrpn[1] === 63;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Controls, DeviceSetup, Intro } from './components';\nimport { PROGRAM_CHANGE } from './midi';\nimport { isPatch, selectPatch } from './mininova';\nimport { isNRPNStart, isNRPNMiddle, isNRPNEnd } from './mininova.nrpn';\nimport { debugMidiMessage } from './debug';\nimport { DeviceInput, DeviceOutput, MidiMessage } from './ports';\nimport { patchDumpReceived } from './redux/patch';\n\ninterface RootState {\n  device: {\n    input: DeviceInput,\n    output: DeviceOutput,\n  }\n}\n\nfunction App() {\n  const input = useSelector((state: RootState) => state.device.input);\n  const output = useSelector((state: RootState) => state.device.output);\n  const [currentPatch, setCurrentPatch] = useState<number | undefined>(undefined);\n  const dispatch = useDispatch();\n\n  const decodePatch = (data: Uint8Array) => {\n    console.log('Received patch.');\n    dispatch(patchDumpReceived(data));\n  }\n\n  let nrpn: number[] = [];\n\n  const onIncomingMidiMessage = (message: MidiMessage) => {\n    debugMidiMessage(message, 'Input: ');\n    if (message[0] === PROGRAM_CHANGE) {\n      setCurrentPatch(message[1]);\n    } else if (isPatch(message)) {\n      decodePatch(message);\n    } else if (isNRPNEnd(message, nrpn)) {\n      nrpn.push(message[2]);\n      console.log('NRPN: ' + nrpn);\n      nrpn = [];\n    } else if (isNRPNMiddle(message, nrpn)) {\n      nrpn.push(message[2]);\n    } else if (isNRPNStart(message)) {\n      nrpn = [message[2]];\n    }\n  };\n\n  const emit = (message: Uint8Array) => {\n    if (!output) {\n      return;\n    }\n    debugMidiMessage(message, 'Output: ');\n    output.send(message);\n  };\n\n  const onChangeOutput = () => selectPatch(emit);\n\n  return (\n    <div>\n      <Intro />\n      <h3>Setup</h3>\n      <DeviceSetup\n        onChangeOutput={onChangeOutput}\n        onIncomingMidiMessage={onIncomingMidiMessage}\n        input={input}\n        output={output}\n      />\n      <Controls\n        currentPatch={currentPatch}\n        emit={emit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  isSupported: !!navigator.usb,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as deviceReducer } from './device';\nimport { reducer as midiReducer } from './midi';\nimport { reducer as patchReducer } from './patch';\nimport { reducer as usbReducer } from './usb';\n\nexport const reducer = combineReducers({\n  device: deviceReducer,\n  midi: midiReducer,\n  patch: patchReducer,\n  usb: usbReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer } from './redux';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}